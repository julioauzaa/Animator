setUp:
rectangle
oval

OVERALL:
use decimals
use whole numbers
use large numbers
use numbers with many decimal places

CreateShapes:
Parameters: String name, Shape shape, RGB color, double width, double height,
                                      double x, double y, int startTime, int endTime)

Shape setters:
RGB color, double width, double height, double x, double y
int input   Juan
decimal input AJA

legal testing
1. create regular shapes - have a test for each shape
Shapes:
Rectangle  AJA
Oval       AJA
Square     AJA
Circle     AJA
Triangle   AJA
Rhombus     AJA
2. Extremely large numbers AJA

exception testing:
0. IllegalShapeType AJA
1. name = null Juan
2. name = "" AJA
3. name = " " Juan
2. shape = null Probably unnecessary since we have an enum class
3. color = null AJA
4. width: negative Juan
	-radius: negative AJA
	-length(Square): negative AJA
5. width: 0 Juan
6. height: negative Juan
7. height: 0 Juan
8. x: negative Juan
9. y: negative Juan
10. start time: negative Juan
11. end time : 0 AJA
12. end time : negative Juan
13. end time < start time AJA
14. start time > end time Juan
15. IllegalArgumentExceptionTest for trying to use setWidth() for circle AJA
15. IllegalArgumentExceptionTest for trying to use setWidth() for square AJA

2. move
Parameters: String name, double newX, double newY, int startTime, int endTime
1. move from x,y to same x, y - done
2. all legal parameters

exceptions:
1. name = null - done
2. name = "" - done
3. name = " " - done
4. newX: negative - done
6. newY: negative - done
10. start time: negative - done
11. end time : 0 - done
12. end time : negative - done
13. end time < start time - done
14. start time > end time - done
15. overlapping move - done

3. changeColor
Parameters: String name, RGB newColor, int startTime, int endTime
legal testing:
1. color to same color
2. legal parameters

exceptions:
1. name = null - done
2. name = "" - done
3. name = " " - done
3. color = null - done
4. color red = negative - done
5. color green = negative - done
6. color blue = negative - done
7. color red = > 255 - done
8. color green = > 255 - done
9. color blue = > 255 - done
10. color all negative - done
11. color all > 255 - done
10. start time: negative - done
11. end time : 0 - done
12. end time : negative - done
13. start time > end time - done
14. overlapping time color - done

4. scale
Parameters: String name, double newWidth, double newHeight, int startTime, int endTime
legal testing:
1. w, h to same w, h - done
2. all legal parameters - done

Exceptions:
1. name = null - done
2. name = "" - done
3. name = " " - done
4. newWidth: negative - done
5. newWidth: 0 - done
6. newHeight: negative - done
7. newHeight: 0 - done
10. start time: negative - done
11. end time : 0 - done
12. end time : negative - done
13. end time < start time -done
14. overlapping - done


5.  getShapesAtTicks
Parameters: int tick
Legal testing:
check tick at 9
move from 10 to 15
test check tick starting at 10 and ending at 15 inclusive
check tick at 16

exceptions:
1. negative tick
2. tick 0

6. toString
1. test rectangle
2. test oval