setUp:
rectangle
oval

OVERALL:
use decimals
use whole numbers
use large numbers
use numbers with many decimal places

CreateShapes:
Parameters: String name, Shape shape, RGB color, double width, double height,
                                      double x, double y, int startTime, int endTime)

Shape setters:
RGB color, double width, double height, double x, double y
int input   Juan
decimal input AJA

legal testing
1. create regular shapes - have a test for each shape
Shapes:
Rectangle  AJA
Oval       AJA
Square     AJA
Circle     AJA
Triangle   AJA
Rhombus     AJA
2. Extremely large numbers AJA

1. CreateShape
2. Parameters: String name, Shape shape, RGB color, double width, double height,
                        double x, double y, int startTime, int endTime
1. all legal parameters
2. exceptions:
3. Shape = null AJA
4. RGB = null AJA
5. name = null AJA
6. name = "" AJA
7. name = " " AJA
8. Name = name already created AJA
9. Height = negative
10. Width = negative
11. newX: negative
12. newY: negative
13. start time: negative AJA
14. end time : 0 not sure if Illegal
15. end time : negative AJA
16. end time < start time AJA
17. Duplicate create AJA

2. move
Parameters: String name, double newX, double newY, int startTime, int endTime
1. move from x,y to same x, y - done
2. all legal parameters

exceptions:
1. name = null AJA
2. name = "" AJA
3. name = " " AJA
4. newX: negative AJA
6. newY: negative AJA
10. start time: negative AJA
11. end time : 0 not sure if Illegal
12. end time : negative AJA
13. end time < start time AJA
14. start time > end time
15. Move  before start time AJA
16. Move after end time AJA
17. Move start before end AJA
18. Move to same position AJA
19. Move overlapping in time: Same start and ending time AJA
20. Move overlapping in time: 2nd color change within previous time range AJA
21. Overlapping same end of previous action and start of next -done
22. Duplicate mve AJA
23. Overlapping actions (move, scale, changeColor) - done

3. changeColor
Parameters: String name, RGB newColor, int startTime, int endTime
legal testing:
1. color to same color - done
2. legal parameters

exceptions:
1. name = null AJA
2. name = "" AJA
3. name = " " AJA
3. color = null AJA
4. color red = negative AJA
5. color green = negative AJA
6. color blue = negative AJA
7. color red = > 255 AJA
8. color green = > 255 AJA
9. color blue = > 255 AJA
10. color all negative AJA
11. color all > 255 AJA
10. start time: negative AJA
11. end time : 0
12. end time : negative AJA
13. end time < start time AJA
14. start time > end time
15. Overlapping action: Same start and ending time -done
16. Overlapping action: 2nd color change within previous time range - done
17. Duplicate color change AJA
18. Overlapping end of previous action and start of next - done

4. scale
Parameters: String name, double newWidth, double newHeight, int startTime, int endTime
legal testing:
1. w, h to same w, h - done
2. all legal parameters -done

Exceptions:
1. name = null - done
2. name = "" - done
3. name = " " - done
4. newWidth: negative - done
5. newWidth: 0 - done
6. newHeight: negative - done
7. newHeight: 0 - done
10. start time: negative - done
11. end time : 0 - done
12. end time : negative - done
13. end time < start time - done
14. start time > end time - done
15. Overlapping times: same start and end - done
16. Overlapping times: attempting scale within previous time - done
17. Duplicate scaling - done
18. Overlapping same ending time as the start of next - done

5.  getShapesAtTicks
Parameters: int tick
Legal testing:
check tick at 0 - done
check tick at 1 - done
check tick at 2 after a few actions - done
move from 10 to 15
test check tick starting at 10 and ending at 15 inclusive
check tick at 16

exceptions:
1. tick 0 - done
2. tick negative - done


6. toString
1. test rectangle - done
2. test oval - done